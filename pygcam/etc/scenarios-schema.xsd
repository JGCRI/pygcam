<?xml version="1.0" encoding="utf-8" standalone="no"?>
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema' elementFormDefault='qualified'>

	<xs:include schemaLocation="conditional.xsd"/>
    <xs:include schemaLocation="comment.xsd"/>

	<xs:simpleType name="iteratorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="float"/>
			<xs:enumeration value="int"/>
            <xs:enumeration value="list"/>
        </xs:restriction>
    </xs:simpleType>

	<xs:simpleType name="comparison">
		<xs:restriction base="xs:string">
			<xs:enumeration value="is"/>
			<xs:enumeration value="isNot"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name='scenarios'>
        <xs:complexType>
            <xs:choice maxOccurs='unbounded'>
                <xs:element minOccurs="0" ref='iterator'/>
                <xs:element ref='scenarioGroup'/>
                <xs:element ref='comment'/>
                <xs:element ref='CONDITIONAL'/>
            </xs:choice>
            <xs:attribute name='name' type='xs:string'/>            <!-- TBD: unused currently -->
            <xs:attribute name='defaultGroup' type='xs:string'/>
        </xs:complexType>
    </xs:element>

    <xs:element name='iterator'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name='name' use='required' type='xs:string'/>
                    <xs:attribute name='type' type='iteratorType' default="list"/>
                    <xs:attribute name='min' type='xs:decimal'/>
                    <xs:attribute name='max' type='xs:decimal'/>
                    <xs:attribute name='step' type='xs:decimal'/>
                    <xs:attribute name='format' type='xs:string'/>
                    <xs:attribute name='values' type='xs:string'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name='scenarioGroup'>
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref='scenario'/>
                <xs:element ref='comment'/>
            </xs:choice>
            <xs:attribute name='name' use='required' type='xs:string'/>
            <xs:attribute name='useGroupDir' type='xs:boolean' default='false'/>
            <xs:attribute name='srcGroupDir' type='xs:string'/>
            <xs:attribute name='iterator' type='xs:string'/>
            <xs:attribute name='baselineSource' type='xs:string'/>
        </xs:complexType>
    </xs:element>

    <xs:element name='scenario'>
        <xs:complexType>
            <xs:choice maxOccurs='unbounded'>
                <xs:element minOccurs="0" ref='insert'/>
                <xs:element minOccurs="0" ref='add'/>
                <xs:element minOccurs="0" ref='replace'/>
                <xs:element minOccurs="0" ref='delete'/>
                <xs:element minOccurs="0" ref='function'/>
                <xs:element minOccurs="0" ref='if'/>
                <xs:element minOccurs="0" ref='CONDITIONAL'/>
                <xs:element minOccurs="0" ref='comment'/>
            </xs:choice>
            <xs:attribute name='name' use='required' type='xs:string'/>
            <xs:attribute name='active' type='xs:boolean' default='true'/>      <!-- TBD: drop this? -->
            <xs:attribute name='baseline' type='xs:boolean'/>
            <xs:attribute name='iterator' type='xs:string'/>
            <xs:attribute name='subdir' type='xs:string'/>                      <!-- TBD-->

        </xs:complexType>
    </xs:element>

    <!-- <function name="protectLand">{fraction}, unprotectFirst=True, otherArable=False</function> -->
    <xs:element name='function'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name='name' use='required' type='xs:string'/>
                    <xs:attribute name='dynamic' type='xs:boolean'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name='insert'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name='name' use='required' type='xs:string'/>
                    <xs:attribute name='dir' type='xs:string'/>
                    <xs:attribute name='after' use='required' type='xs:string'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name='add'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name='name' use='required' type='xs:string'/>
                    <xs:attribute name='dir' type='xs:string'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name='replace'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name='name' use='required' type='xs:string'/>
                    <xs:attribute name='dir' type='xs:string'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <xs:element name='delete'>
        <xs:complexType>
            <xs:attribute name='name' use='required' type='xs:string'/>
            <xs:attribute name='dir' type='xs:string'/>
        </xs:complexType>
    </xs:element>

    <xs:element name="if">
        <xs:complexType>
            <xs:choice maxOccurs='unbounded'>
                <xs:element minOccurs="0" ref='insert'/>
                <xs:element minOccurs="0" ref='add'/>
                <xs:element minOccurs="0" ref='replace'/>
                <xs:element minOccurs="0" ref='delete'/>
                <xs:element minOccurs="0" ref='function'/>
                <xs:element minOccurs="0" ref='if'/>
                <xs:element minOccurs="0" ref='CONDITIONAL'/>
                <xs:element minOccurs="0" ref='comment'/>
            </xs:choice>
            <xs:attribute name='value1'  type='xs:string' use='required' />
            <xs:attribute name='value2'  type='xs:string' use='required' />
            <xs:attribute name='matches' type='xs:boolean' default="1"/>
        </xs:complexType>
    </xs:element>

</xs:schema>
