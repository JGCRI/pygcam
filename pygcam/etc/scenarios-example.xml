<?xml version="1.0" encoding="UTF-8"?>

<!-- Example of XML setup for "simple" tutorial project -->
<setup name="uniqueName" defaultGroup="protect-0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="scenarios-schema.xsd">

    <iterator name="fraction" type="list" values="0, 0.90"/>
    <iterator name="policy"   type="list" values="corn,switchgrass,biodiesel"/>

    <scenarioGroup name="protect-{fraction}" useGroupDir="0" iterator="fraction">

        <scenario name="base-{fraction}" baseline="1">
            <!-- N.B. configuration_ref.xml protects 90% of unmanaged land -->
            <if value1="{fraction}" value2="0" matches="true">
                <!-- Delete scenario elements in the file by their "name" tag -->
                <delete name="protected_land_input_2"/>
                <delete name="protected_land_input_3"/>
            </if>

            <!--
            Set baseline fuel quantities

            "addMarketConstraint" adds references to a pair of files comprising a policy,
            i.e., a policy definition file and a constraint file. References to two files
            are added to the configuration file: the files are assumed  to be named, e.g.,
            "corn-etoh-subsidy.xml" and "corn-etoh-subsidy-constraint.xml" for a "subsidy"
            policy named "corn-etoh"
            -->
            <function name="addMarketConstraint">'base-corn',         'subsidy'</function>
            <function name="addMarketConstraint">'base-switchgrass',  'subsidy'</function>
            <function name="addMarketConstraint">'base-biodiesel',    'subsidy'</function>
        </scenario>

        <scenario name="{policy}-{fraction}" iterator="policy">
            <!--
             <function> allows certain methods of the XMLEditor class to be called
             by passing comma-separated arguments in the text, just as they would
             be written inside the parentheses of a function call
             -->
            <function name="delMarketConstraint">'base-{policy}', 'subsidy'</function>
            <function name="addMarketConstraint">'shock-{policy}', 'subsidy'</function>
        </scenario>

    </scenarioGroup>
</setup>
