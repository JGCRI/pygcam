<!--
  Possible syntax for defining simple setup "script" in XML.

  Need a way to call out to a Python function, e.g., to generate
  constraints. Maybe translate text into kwargs?

  Maybe best approach is to compile this into a Python program that
  accomplishes the same? If so, are we really avoiding having to know
  python?

  Or, have a generic version of scenarios.py that reads this file,
  respects the various flags for directory locations, scenario names,
  whether to generate or not. Start with a scenarios.py and replace
  the innards, keeping the same API.
-->

<setup name="uniqueName">
    <vars>
        <!-- results in variables from the set {0.0, 0.2, 0.4, 0.6, 0.8, 1.0} -->
        <iterator name="fraction" type="float" min="0.0" max="1.0" incr="0.2"/>

        <!-- incr="1" is default for int type -->
        <iterator name="sspnum" type="int" min="1" max="5"/>
    </vars>

    <!-- This makes listing groups harder, but not impossible -->
    <scenarioGroup name="protect-{fraction}" useGroupDir="0" iterator="fraction">

        <scenario name="base-{fraction}-ssp-{sspnum}" baseline="1" iterator="sspnum">
            <delete name="nonco2_pland"/>

            <!-- Rules for interpreting filenames
            - the variable {scenarioDir} is defined to be a relative link
              to the current scenario's subdir in local-xml.
            -
            -->
            <replace name="cement_2">{scenarioDir}/cement_incelas_ssp{sspnum}.xml'</replace>
            <replace name="industry_2">{scenarioDir}/industry_incelas_ssp{sspnum}.xml'</replace>
            <replace name="socioeconomics_2">{scenarioDir}/socioeconomics_ssp{sspnum}.xml'</replace>

            <!-- Replace standard files with these modified versions -->
            <replace name="energy_transformation" dir="scenario">{scenarioDir}/en_transformation_OTAQ.xml</replace>
            <replace name="transportation">{scenarioDir}/transportation_UCD_OTAQ.xml</replace>

            <!-- Options for <insert>:
                <insert name="whatever">path</insert> => inserts at the end of the list of <File>s
                <insert name="whatever" before="tag">path</insert> => insert before element with "tag"
                <insert name="whatever" after="tag">path</insert>  => insert after element with "tag"
            -->
            <insert name="refining_LDV">{scenarioDir}/refining_LDV_OTAQ.xml</insert>

            <!-- US sugar ethanol and palm biodiesel -->
            <insert name="energy_USSugar">{scenarioDir}/USSugarEthanol.xml</insert>
            <insert name="energy_USPalm">{scenarioDir}/USPalmBioDiesel.xml</insert>

            <!-- Don't ramp up biofuel shareweight in US. Tunes ref case to be close to AEO 2015 projection -->
            <insert name="energy_transformationBFS1">Biofuelshareweights.xml</insert>


        </scenario>

        <!-- By default, active="1"; set it to "0" to deactivate -->
        <scenario name="corn-{fraction}-ssp-{sspnum}" iterator="sspnum" active="1">
            <insert name="whatever">{scenarioDir}/corn-specific-file.xml</insert>

            <!--
            Translate this into generateX(arg='foo', x=1, y=bar).
            If a generator is defined, it must be run after baseline results are available.
            -->
            <generator name='pkg.module.generateX'>arg='foo' x=1 y=bar</generator>
        </scenario>

        <scenario name="sugarcane"/>
        <scenario name="soy"/>

    </scenarioGroup>

</setup>
