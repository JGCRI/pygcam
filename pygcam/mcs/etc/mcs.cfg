#
# Configuration defaults for pygcam-mcs
#

[DEFAULT]
MCS.Root        = %(Home)s/mcs
MCS.RunDir      = %(MCS.Root)s/%(GCAM.ProjectName)s

MCS.RunDbDir    = %(MCS.RunDir)s/db
MCS.RunSimsDir  = %(MCS.RunDir)s/sims
MCS.RunLogDir   = %(MCS.RunSimsDir)s/log

MCS.DbFile          = pygcammcs.sqlite
MCS.DbPath          = %(MCS.RunDbDir)s/%(MCS.DbFile)s
Sqlite.URL          = sqlite:///%(MCS.DbPath)s
MCS.EchoSQL         = False
MCS.DefaultExpName  =

### Postgres support ###
# Connection URL format:
# postgresql+psycopg2://user:password@host:port/dbname[?key=value&key=value...]
# ~/.pgpass can contain hostname:port:database:username:password,
# but the file must not be group/world readable (must chmod 600).
Postgres.User    = mcsuser
Postgres.Pass    =
Postgres.Host    = localhost
Postgres.Port    = 5432
Postgres.DbName  = %(GCAM.ProjectName)s
Postgres.URL     = postgresql+psycopg2://%(Postgres.User)s:%(Postgres.Pass)s@%(Postgres.Host)s/%(Postgres.DbName)s
# Can be full path if not in user's PATH
Postgres.CreateDbExe  = createdb
Postgres.CreateDbArgs = -p %(Postgres.Port)s -h %(Postgres.Host)s %(Postgres.DbName)s

#MCS.DbURL       = %(Postgres.URL)s
MCS.DbURL       = %(Sqlite.URL)s

# TBD: drop support for PBS?
### PBS options
PBS.QueueName      = serial
PBS.JOB_ID_VAR     = PBS_JOBID
PBS.EpiloguePath   = %(MCS.RunDir)s/bin/epilogue.py
PBS.EpilogueOpt    = -l epilogue=%(PBS.EpiloguePath)s
PBS.EnviroVars     =
PBS.EnviroVarsFlag = -v
PBS.OtherArgs      =
PBS.BatchCommand    = qsub -q {queue} -N {jobName} -l walltime={walltime} -e {logPath} -m n -j oe {enviroVars} %(PBS.OtherArgs)s {otherArgs}
PBS.StopJobsCommand = qselect -u $USER | xargs qdel

### SLURM options
SLURM.QueueName      = slurm
SLURM.JOB_ID_VAR     = SLURM_JOB_ID
SLURM.EpiloguePath   =
SLURM.EpilogueOpt    =
SLURM.EnviroVars     =
SLURM.EnviroVarsFlag = --export=
SLURM.OtherArgs      = -n1 -c1

SLURM.BatchCommand    = sbatch -p {partition} -J {jobName} -t {walltime} {enviroVars} -e {logFile} -o {logFile} %(SLURM.OtherArgs)s
SLURM.StopJobsCommand = scancel -u %(User)s

### Batch submission parameters ###
#MCS.BatchSystem    = PBS
MCS.BatchSystem    = SLURM

# max queue slots to occupy; default is unlimited
MCS.QueueLimit     = 0
MCS.MinPerTask     = 20

# args to pass to queued program
MCS.ProgramArgs    =

# If True, the program is run directly rather than queued
MCS.RunLocal       = False

# Maximum dirs per subdirectory before creating a new level
MCS.MaxSimDirs     = 1000

### Plotting support ###
MCS.PlotDir           = %(MCS.RunDir)s/plot
MCS.PlotType          = png
MCS.PlotShowHistogram = False
MCS.PlotShowKDE       = True
MCS.PlotShowShading   = True

#
# ipyparallel stuff
#
IPP.Scheduler     = slurm
IPP.Queue         = slurm
IPP.Account       =
IPP.Profile       = pygcam
IPP.ClusterId     = mcs
IPP.TasksPerNode  = 4
IPP.MaxEngines    = 300
IPP.MinutesPerRun = 20
IPP.MinTimeToRun  = 12
IPP.WorkDir       = %(Home)s/.ipython/profile_%(IPP.Profile)s
IPP.OtherArgs     =
IPP.StartupWaitTries = 5
IPP.StartupWaitSecs  = 5
IPP.StopJobsCommand  = %(SLURM.StopJobsCommand)s
IPP.ResultLoopWaitSecs = 30

#
# Config file for gcammcs
#
MCS.RunWorkspace    = %(MCS.RunDir)s/Workspace
MCS.RunInputDir     = %(MCS.RunWorkspace)s/input

# Useful for standard directory setup
MCS.UserFilesDir   = %(GCAM.ProjectDir)s/mcs

# User's parameters.xml, scenarios.xml and results.xml files are copied to
# {simDir}/app-xml for reference since these might vary by simulation.
MCS.ParametersFile = %(MCS.UserFilesDir)s/parameters.xml
MCS.ResultsFile    = %(MCS.UserFilesDir)s/results.xml
MCS.ScenariosFile  = %(MCS.UserFilesDir)s/scenarios.xml

# Where to look for functions specified in <TrialFunc> elements
MCS.TrialFuncDir       = %(MCS.UserFilesDir)s

# TBD: this looks obsolete. test it.
# User-defined scenarios and queries should reside outside official GCAM release
# directory. Queries are copied to {appDir}/workspace/queries; scenarios are copied
# to {simDir}/local-xml.
MCS.UserQueryDir       = %(MCS.UserFilesDir)s/queries

# Any directories between the scenario local-xml dir and the scenario name,
# e.g., for scenario files in {simDir}/local-xml/project1/scenario1/config.xml
# you would set this to "project1"
MCS.ScenarioSubdir     = %(GCAM.ScenarioGroup)s

#
# Querying and post-processing results
#
# PostProcessor and DiffScript will be removed once integrated with pygcam
MCS.PostProcessorSteps = diff

# Which years to evaluate
MCS.Years = 1990,2005-2100:5

# Files to link from the reference workspace to run-time MCS workspace.
MCS.WorkspaceFilesToLink = %(GCAM.InputFiles)s

# Set to True to create GCAM "output" dirs for each trial that are
# symlinked to files on a temporary disk, e.g., that are deleted when
# the job completes. (Obviated by ability to create in-memory database.)
MCS.UseTempOutputDir = False

